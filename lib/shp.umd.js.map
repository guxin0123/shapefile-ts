{"version":3,"file":"shp.umd.js","sources":["../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/lib/projections/geos.js","../node_modules/proj4/lib/index.js","../node_modules/proj4/projs.js","../node_modules/fflate/esm/browser.js","../src/unzip.ts","../src/binaryajax-fetch.ts","../src/combine.ts","../src/parse-shp.ts","../src/decoder-browser.ts","../src/parse-dbf.ts","../src/index.ts"],"sourcesContent":["export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.militargeographische_institut = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Militar-Geographische Institut\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import * as fflate from 'fflate';\n\n\nconst unzip = (buffer: ArrayBuffer | Uint8Array, encoding?: string) => {\n  let zipBuffer: Uint8Array;\n  if (buffer instanceof ArrayBuffer) {\n    zipBuffer = new Uint8Array(buffer);\n  } else {\n    zipBuffer = buffer;\n  }\n  const out = {};\n  const decompressed: { [key: string]: any } = fflate.unzipSync(zipBuffer);\n  for (const key in decompressed) {\n    let fileName = key;\n    if (encoding) {\n      var decoder = new TextDecoder(encoding);\n      fileName = decoder.decode(fflate.strToU8(key));\n    }\n    let result: string;\n    if (fileName.slice(-3).toLowerCase() === 'shp' || fileName.slice(-3).toLowerCase() === 'dbf') {\n      result = decompressed[key];\n    } else {\n      result = fflate.strFromU8(decompressed[key]);\n    }\n    out[fileName] = result;\n  }\n  return out;\n};\n\nexport { unzip };","import combine from './combine';\n\nasync function binaryAjax (_url: string, type?: string) {\n\n  const url = combine(_url, type);\n  const isOptionalTxt = type === 'prj' || type === 'cpg';\n  try {\n    const resp = await fetch(url);\n    if (resp.status > 399) {\n      throw new Error(resp.statusText);\n    }\n    if (isOptionalTxt) {\n      return resp.text();\n    }\n    const parsed = await resp.arrayBuffer();\n    return new Uint8Array(parsed);\n  } catch (e) {\n    console.log('ERROR', e, type);\n    if (isOptionalTxt || type === 'dbf') {\n      return false;\n    }\n    throw e;\n  }\n};\nexport default binaryAjax;","\nconst combine=function (base: string, type: any)  {\n  if (!type) {\n    return base;\n  }\n  const url = new URL(location.href+base);\n  url.pathname = `${url.pathname}.${type}`;\n  return url.href;\n};\nexport default combine;","import proj4 from \"proj4\";\n\nclass ParseShp {\n  parseFunc: any;\n  buffer: Uint8Array;\n  rows: any[] = [];\n\n\n  constructor(buffer: Uint8Array, trans: string | boolean | proj4.Converter) {\n    this.buffer = buffer;\n    this.headers = this.parseHeader();\n    if (this.headers.length < this.buffer.byteLength) {\n      this.buffer = this.buffer.slice(0, this.headers.length);\n    }\n    this.shpFuncs(trans);\n    this.rows = this.getRows();\n  }\n\n  headers: any; parseCoord: any;\n  shpFuncObj = {\n    1: 'parsePoint',\n    3: 'parsePolyline',\n    5: 'parsePolygon',\n    8: 'parseMultiPoint',\n    11: 'parseZPoint',\n    13: 'parseZPolyline',\n    15: 'parseZPolygon',\n    18: 'parseZMultiPoint'\n  };\n\n\n\n  isClockWise = (array: string | any[]) => {\n    let sum = 0;\n    let i = 1;\n    const len = array.length;\n    let prev: any[], cur: any[];\n    while (i < len) {\n      prev = cur || array[0];\n      cur = array[i];\n      sum += ((cur[0] - prev[0]) * (cur[1] + prev[1]));\n      i++;\n    }\n    return sum > 0;\n  }\n\n  polyReduce = (a: any[][], b: any) => {\n    if (this.isClockWise(b) || !a.length) {\n      a.push([b]);\n    } else {\n      a[a.length - 1].push(b);\n    }\n    return a;\n  }\n\n  makeParseCoord = (trans: string | boolean | proj4.Converter) => {\n    if (trans) {\n      return function (data: Uint8Array, offset: number) {\n        var dataView = new DataView(data.buffer);\n        const args = [dataView.getFloat64(offset, true), dataView.getFloat64(offset + 8, true)];\n        return (trans as proj4.Converter).inverse(args);\n      };\n    } else {\n      return function (data: Uint8Array, offset: number) {\n        var dataView = new DataView(data.buffer);\n        return [dataView.getFloat64(offset, true), dataView.getFloat64(offset + 8, true)];\n      };\n    }\n  }\n\n  parsePoint = (data: Uint8Array) => {\n    return {\n      type: 'Point',\n      coordinates: this.parseCoord(data, 0)\n    };\n  };\n\n  shpFuncs(tran: string | boolean | proj4.Converter) {\n    let num = this.headers.shpCode;\n    if (num > 20) {\n      num -= 20;\n    }\n    if (!(num in this.shpFuncObj)) {\n      throw new Error('I don\\'t know that shp type');\n    }\n    this.parseFunc = this[this.shpFuncObj[num]];\n    this.parseCoord = this.makeParseCoord(tran);\n  };\n\n  parseZPoint = (data: Uint8Array) => {\n    var dataView = new DataView(data.buffer);\n    const pointXY = this.parsePoint(data);\n    pointXY.coordinates.push(dataView.getFloat64(16, true));\n    return pointXY;\n  };\n  parsePointArray = (data: Uint8Array, offset: number, num: number) => {\n    const out: any[] = [];\n    let done = 0;\n    while (done < num) {\n      out.push(this.parseCoord(data, offset));\n      offset += 16;\n      done++;\n    }\n    return out;\n  };\n  parseZPointArray = (data: Uint8Array, zOffset: number, num: number, coordinates: string | any[]) => {\n    var dataView = new DataView(data.buffer);\n    let i = 0;\n    while (i < num) {\n      coordinates[i].push(dataView.getFloat64(zOffset, true));\n      i++;\n      zOffset += 8;\n    }\n    return coordinates;\n  };\n\n  parseArrayGroup = (data: Uint8Array, offset: number, partOffset: number, num: number, tot: number) => {\n    var dataView = new DataView(data.buffer);\n    const out: any[] = [];\n    let done = 0;\n    let curNum; let nextNum = 0;\n    let pointNumber;\n    while (done < num) {\n      done++;\n      partOffset += 4;\n      curNum = nextNum;\n      if (done === num) {\n        nextNum = tot;\n      } else {\n        nextNum = dataView.getInt32(partOffset, true);\n      }\n      pointNumber = nextNum - curNum;\n      if (!pointNumber) {\n        continue;\n      }\n      out.push(this.parsePointArray(data, offset, pointNumber));\n      offset += (pointNumber << 4);\n    }\n    return out;\n  };\n  parseZArrayGroup = (data: Uint8Array, zOffset: number, num: number, coordinates: (string | any[])[]) => {\n    let i = 0;\n    while (i < num) {\n      coordinates[i] = this.parseZPointArray(data, zOffset, coordinates[i].length, coordinates[i]);\n      zOffset += (coordinates[i].length << 3);\n      i++;\n    }\n    return coordinates;\n  };\n  parseMultiPoint = (data: Uint8Array) => {\n    var dataView = new DataView(data.buffer);\n    const out: { [key: string]: any } = {};\n    let num = null;\n    try {\n      num = dataView.getInt32(32, true);\n    } catch (RangeError) {\n      return null;\n    }\n\n    const mins = this.parseCoord(data, 0);\n    const maxs = this.parseCoord(data, 16);\n    out.bbox = [\n      mins[0],\n      mins[1],\n      maxs[0],\n      maxs[1]\n    ];\n    const offset = 36;\n    if (num === 1) {\n      out.type = 'Point';\n      out.coordinates = this.parseCoord(data, offset);\n    } else {\n      out.type = 'MultiPoint';\n      out.coordinates = this.parsePointArray(data, offset, num);\n    }\n    return out;\n  };\n  parseZMultiPoint = (data: Uint8Array) => {\n    var dataView = new DataView(data.buffer);\n    const geoJson = this.parseMultiPoint(data);\n    if (!geoJson) {\n      return null;\n    }\n    let num: number;\n    if (geoJson.type === 'Point') {\n      geoJson.coordinates.push(dataView.getFloat64(72, true));\n      return geoJson;\n    } else {\n      num = geoJson.coordinates.length;\n    }\n    const zOffset = 52 + (num << 4);\n    geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n    return geoJson;\n  };\n  parsePolyline = (data: Uint8Array) => {\n    var dataView = new DataView(data.buffer);\n    const out: { [key: string]: any } = {};\n    const numParts = dataView.getInt32(32, true);\n    if (!numParts) {\n      return null;\n    }\n    const mins = this.parseCoord(data, 0);\n    const maxs = this.parseCoord(data, 16);\n    out.bbox = [\n      mins[0],\n      mins[1],\n      maxs[0],\n      maxs[1]\n    ];\n    const num = dataView.getInt32(36, true);\n    let offset: number, partOffset: number;\n    if (numParts === 1) {\n      out.type = 'LineString';\n      offset = 44;\n      out.coordinates = this.parsePointArray(data, offset, num);\n    } else {\n      out.type = 'MultiLineString';\n      offset = 40 + (numParts << 2);\n      partOffset = 40;\n      out.coordinates = this.parseArrayGroup(data, offset, partOffset, numParts, num);\n    }\n    return out;\n  };\n  parseZPolyline = (data: Uint8Array) => {\n    const geoJson = this.parsePolyline(data);\n    if (!geoJson) {\n      return null;\n    }\n    const num = geoJson.coordinates.length;\n    let zOffset: number;\n    if (geoJson.type === 'LineString') {\n      zOffset = 60 + (num << 4);\n      geoJson.coordinates = this.parseZPointArray(data, zOffset, num, geoJson.coordinates);\n      return geoJson;\n    } else {\n      const totalPoints = geoJson.coordinates.reduce(function (a, v) {\n        return a + v.length;\n      }, 0);\n      zOffset = 56 + (totalPoints << 4) + (num << 2);\n      geoJson.coordinates = this.parseZArrayGroup(data, zOffset, num, geoJson.coordinates);\n      return geoJson;\n    }\n  };\n\n\n  polyFuncs = (out: { [x: string]: any; type?: any; coordinates?: any; }) => {\n    if (!out) {\n      return out;\n    }\n    if (out.type === 'LineString') {\n      out.type = 'Polygon';\n      out.coordinates = [out.coordinates];\n      return out;\n    } else {\n      out.coordinates = out.coordinates.reduce(this.polyReduce, []);\n      if (out.coordinates.length === 1) {\n        out.type = 'Polygon';\n        out.coordinates = out.coordinates[0];\n        return out;\n      } else {\n        out.type = 'MultiPolygon';\n        return out;\n      }\n    }\n  };\n  parsePolygon = (data: Uint8Array) => {\n    return this.polyFuncs(this.parsePolyline(data));\n  };\n  parseZPolygon = (data: Uint8Array) => {\n    return this.polyFuncs(this.parseZPolyline(data));\n  };\n\n\n\n  getShpCode = () => {\n    return this.parseHeader().shpCode;\n  };\n  parseHeader = () => {\n    const view: Uint8Array = this.buffer.slice(0, 100);\n    var dataView = new DataView(view.buffer);\n    return {\n      length: dataView.getInt32(6 << 2) << 1,\n      version: dataView.getInt32(7 << 2, true),\n      shpCode: dataView.getInt32(8 << 2, true),\n      bbox: [\n        dataView.getFloat64(9 << 2, true),\n        dataView.getFloat64(11 << 2, true),\n        dataView.getFloat64(13 << 2, true),\n        dataView.getFloat64(13 << 2, true)\n      ]\n    };\n  };\n  getRows = () => {\n    let offset = 100;\n    const len = this.buffer.byteLength;\n    const out: any[] = [];\n    let current;\n    while (offset < len) {\n      current = this.getRow(offset);\n      if (!current) {\n        break;\n      }\n      offset += 8;\n      offset += current.len;\n      if (current.type) {\n        out.push(this.parseFunc(current.data));\n      } else {\n        out.push(null);\n      }\n    }\n    return out;\n  };\n  getRow = (offset: number) => {\n    const view: Uint8Array = this.buffer.slice(offset, offset + 12);\n    var dataView = new DataView(view.buffer);\n    const len = dataView.getInt32(4) << 1;\n    const id = dataView.getInt32(0);\n    if (len === 0) {\n      return {\n        id: id,\n        len: len,\n        type: 0\n      };\n    }\n    return {\n      id: id,\n      len: len,\n      data: this.buffer.slice(offset + 12, offset + len + 8),\n      type: dataView.getInt32(8, true)\n    };\n  };\n\n}\n\nfunction ParseShpFile(buffer: Uint8Array, trans: string | boolean | proj4.Converter) {\n  return new ParseShp(buffer, trans).rows;\n};\nexport default ParseShpFile;","\r\nfunction defaultDecoder(data: AllowSharedBufferSource) {\r\n  var decoder = new TextDecoder();\r\n  var out = decoder.decode(data);\r\n  return out.replace(/\\0/g, '').trim();\r\n}\r\n\r\nvar regex = /^(?:ANSI\\s)?(\\d+)$/m;\r\nfunction createDecoder(encoding: string, second?: boolean) {\r\n  if (!encoding) {\r\n    return defaultDecoder;\r\n  }\r\n  try {\r\n    new TextDecoder(encoding.trim());\r\n  } catch (e) {\r\n    var match = regex.exec(encoding);\r\n    if (match && !second) {\r\n      return createDecoder('windows-' + match[1], true);\r\n    } else {\r\n      return defaultDecoder;\r\n    }\r\n  }\r\n  return browserDecoder;\r\n  function browserDecoder(buffer: AllowSharedBufferSource) {\r\n    var decoder = new TextDecoder(encoding);\r\n    var out = decoder.decode(buffer, {\r\n      stream: true\r\n    }) + decoder.decode();\r\n    return out.replace(/\\0/g, '').trim();\r\n  }\r\n}\r\n\r\nexport { createDecoder }","import { createDecoder } from \"./decoder-browser\"\r\n\r\n\r\n\r\nfunction dbfHeader(data: Uint8Array) {\r\n  var dataView = new DataView(data.buffer);\r\n  var out: { [key: string]: any } = {};\r\n  out.lastUpdated = new Date(dataView.getInt8(1) + 1900, dataView.getInt8(2), dataView.getInt8(3));\r\n  out.records = dataView.getInt32(4, true)//data.readUInt32LE(4);\r\n  out.headerLen = dataView.getInt16(8, true);\r\n  out.recLen = dataView.getInt16(10, true);\r\n  return out;\r\n}\r\n\r\nfunction dbfRowHeader(data: Uint8Array, headerLen: number, decoder: Function) {\r\n  var dataView = new DataView(data.buffer);\r\n  var out = [];\r\n  var offset = 32;\r\n  while (offset < headerLen) {\r\n    out.push({\r\n      name: decoder(data.slice(offset, offset + 11)),\r\n      dataType: String.fromCharCode(dataView.getInt8(offset + 11)),\r\n      len: dataView.getInt8(offset + 16),\r\n      decimal: dataView.getInt8(offset + 17)\r\n    });\r\n    if (dataView.getInt8(offset + 32) === 13) {\r\n      break;\r\n    } else {\r\n      offset += 32;\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\nfunction rowFuncs(buffer: Uint8Array, offset: number, len: number, type: string, decoder: Function) {\r\n  var data = buffer.slice(offset, offset + len);\r\n  var textData = decoder(data);\r\n  switch (type) {\r\n    case 'N':\r\n    case 'F':\r\n    case 'O':\r\n      return parseFloat(textData);\r\n    case 'D':\r\n      return new Date(textData.slice(0, 4), parseInt(textData.slice(4, 6), 10) - 1, textData.slice(6, 8));\r\n    case 'L':\r\n      return textData.toLowerCase() === 'y' || textData.toLowerCase() === 't';\r\n    default:\r\n      return textData;\r\n  }\r\n}\r\n\r\nfunction parseRow(buffer: Uint8Array, offset: number, rowHeaders: Array<any>, decoder: Function) {\r\n  var out = {};\r\n  var i = 0;\r\n  var len = rowHeaders.length;\r\n  var field: any;\r\n  var header: { len: number; dataType: string; name: string | number; };\r\n  while (i < len) {\r\n    header = rowHeaders[i];\r\n    field = rowFuncs(buffer, offset, header.len, header.dataType, decoder);\r\n    offset += header.len;\r\n    if (typeof field !== 'undefined') {\r\n      out[header.name] = field;\r\n    }\r\n    i++;\r\n  }\r\n  return out;\r\n}\r\n\r\nconst parseDbf = function (buffer: Uint8Array, encoding: string) {\r\n  var decoder = createDecoder(encoding);\r\n  var header = dbfHeader(buffer);\r\n  var rowHeaders = dbfRowHeader(buffer, header.headerLen - 1, decoder);\r\n\r\n  var offset = ((rowHeaders.length + 1) << 5) + 2;\r\n  var recLen = header.recLen;\r\n  var records = header.records;\r\n  var out = [];\r\n  while (records) {\r\n    out.push(parseRow(buffer, offset, rowHeaders, decoder));\r\n    offset += recLen;\r\n    records--;\r\n  }\r\n  return out;\r\n};\r\nexport { parseDbf, dbfHeader }","import proj4 from 'proj4';\r\nimport { unzip } from './unzip'\r\nimport binaryAjax from './binaryajax-fetch';\r\nimport ParseShpFile from './parse-shp';\r\nimport { parseDbf } from './parse-dbf';\r\n\r\n\r\nclass ShpObject {\r\n  combine = ([shp, dbf]) => {\r\n    const out: { [key: string]: any } = {};\r\n    out.type = 'FeatureCollection';\r\n    out.features = [];\r\n    let i = 0;\r\n    const len = shp.length;\r\n    if (!dbf) {\r\n      dbf = [];\r\n    }\r\n    while (i < len) {\r\n      out.features.push({\r\n        type: 'Feature',\r\n        geometry: shp[i],\r\n        properties: dbf[i] || {}\r\n      });\r\n      i++;\r\n    }\r\n    return out;\r\n  };\r\n  parseZip = async (buffer: Uint8Array | ArrayBuffer, whiteList?: Array<string>, encoding?: string) => {\r\n    let key: string;\r\n    const zip = unzip(buffer, encoding);\r\n    const names: string[] = [];\r\n    whiteList = whiteList || [];\r\n    for (key in zip) {\r\n      if (key.indexOf('__MACOSX') !== -1) {\r\n        continue;\r\n      }\r\n      if (key.slice(-3).toLowerCase() === 'shp') {\r\n        names.push(key.slice(0, -4));\r\n        zip[key.slice(0, -3) + key.slice(-3).toLowerCase()] = zip[key];\r\n      } else if (key.slice(-3).toLowerCase() === 'prj') {\r\n        zip[key.slice(0, -3) + key.slice(-3).toLowerCase()] = proj4(zip[key]);\r\n      } else if (key.slice(-4).toLowerCase() === 'json' || whiteList.indexOf(key.split('.').pop()) > -1) {\r\n        names.push(key.slice(0, -3) + key.slice(-3).toLowerCase());\r\n      } else if (key.slice(-3).toLowerCase() === 'dbf' || key.slice(-3).toLowerCase() === 'cpg') {\r\n        zip[key.slice(0, -3) + key.slice(-3).toLowerCase()] = zip[key];\r\n      }\r\n    }\r\n    if (!names.length) {\r\n      throw new Error('no layers founds');\r\n    }\r\n    const geojson = names.map((name: string) => {\r\n      let parsed: { [x: string]: any; fileName?: any; }, dbf: any[];\r\n      const lastDotIdx = name.lastIndexOf('.');\r\n      if (lastDotIdx > -1 && name.slice(lastDotIdx).indexOf('json') > -1) {\r\n        parsed = JSON.parse(zip[name]);\r\n        parsed.fileName = name.slice(0, lastDotIdx);\r\n      } else if (whiteList.indexOf(name.slice(lastDotIdx + 1)) > -1) {\r\n        parsed = zip[name];\r\n        parsed.fileName = name;\r\n      } else {\r\n        if (zip[name + '.dbf']) {\r\n          dbf = parseDbf(zip[name + '.dbf'], zip[name + '.cpg']);\r\n        }\r\n        parsed = this.combine([ParseShpFile(zip[name + '.shp'], zip[name + '.prj']), dbf]);\r\n        parsed.fileName = name;\r\n      }\r\n      return parsed;\r\n    });\r\n    if (geojson.length === 1) {\r\n      return geojson[0];\r\n    } else {\r\n      return geojson;\r\n    }\r\n  };\r\n\r\n\r\n  getZip = async (base: string, whiteList: Array<string>, encoding?: string) => {\r\n    const a = await binaryAjax(base) as Uint8Array;\r\n    return this.parseZip(a, whiteList, encoding);\r\n  }\r\n  handleShp = async (base: string) => {\r\n    const args = await Promise.all([\r\n      binaryAjax(base, 'shp'),\r\n      binaryAjax(base, 'prj')\r\n    ]);\r\n    let prj: boolean | proj4.Converter = false;\r\n    try {\r\n      if (args[1]) {\r\n        prj = proj4(args[1] as string);\r\n      }\r\n    } catch (e) {\r\n      prj = false;\r\n    }\r\n    return ParseShpFile(args[0] as Uint8Array, prj);\r\n  };\r\n\r\n\r\n\r\n  handleDbf = async (base: string) => {\r\n    const [dbf, cpg] = await Promise.all([\r\n      binaryAjax(base, 'dbf'),\r\n      binaryAjax(base, 'cpg')\r\n    ]);\r\n    if (!dbf) {\r\n      return;\r\n    }\r\n    return parseDbf(dbf as Uint8Array, cpg as string);\r\n  };\r\n  checkSuffix = (base: string, suffix: string) => {\r\n    const url = new URL(location.href + base);\r\n    return url.pathname.slice(-4).toLowerCase() === suffix;\r\n  };\r\n\r\n\r\n  getShapefile = async (base: string | Uint8Array | ArrayBuffer, whiteList: Array<string>, encoding?: string) => {\r\n    if (typeof base !== 'string') {\r\n      return this.parseZip(base, whiteList, encoding);\r\n    }\r\n    if (this.checkSuffix(base, '.zip')) {\r\n      return this.getZip(base, whiteList, encoding);\r\n    }\r\n    const results = await Promise.all([\r\n      this.handleShp(base),\r\n      this.handleDbf(base)\r\n    ]);\r\n    return this.combine(results);\r\n  };\r\n  parseShp = function (shp: Uint8Array, prj: string | boolean | proj4.Converter) {\r\n    //shp = toBuffer(shp);\r\n    //if (Buffer.isBuffer(prj)) {\r\n    prj = prj.toString();\r\n    // }\r\n    if (typeof prj === 'string') {\r\n      try {\r\n        prj = proj4(prj);\r\n      } catch (e) {\r\n        prj = false;\r\n      }\r\n    }\r\n    return ParseShpFile(shp, prj);\r\n  };\r\n  parseDbf = function (dbf: Uint8Array, cpg: string) {\r\n    //dbf = toBuffer(dbf);\r\n    return parseDbf(dbf, cpg);\r\n  };\r\n\r\n}\r\n\r\n\r\nconst shp = async function (base: string | Uint8Array | ArrayBuffer, whiteList?: Array<string>, encoding?: string) {\r\n  const sp = new ShpObject();\r\n  const resp = await sp.getShapefile(base, whiteList, encoding);\r\n  return resp;\r\n}\r\n\r\nexport default shp;\r\n"],"names":["PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","units","ft","to_meter","ignoredChar","match","obj","key","testkey","keys","Object","lkey","toLowerCase","replace","i","length","projStr","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","NEUTRAL","whitespace","latin","keyword","endThings","digets","Parser","text","Error","this","level","place","root","stack","currentObject","state","mapit","value","Array","isArray","unshift","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","output","d2r","input","wkt","lisp","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","slice","sphere","ellps","TOWGS84","isFinite","forEach","outName","inName","rename","cleanWKT","defs","that","arguments","def","charAt","parseProj","apply","EPSG","ESRI","IAU2000","console","log","WGS84","GOOGLE","globals","codeWords","codes","parse","code","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","extend","destination","source","property","undefined","msfnz","eccent","sinphi","cosphi","con","sqrt","sign","x","adjust_lon","abs","tsfnz","phi","pow","tan","phi2z","ts","dphi","eccnth","atan","sin","merc","init","es","e","cos","forward","y","lon","lat","inverse","exp","names","identity","pt","projs","projStore","add","len","n","projections","start","get","exports$2","ellipseName","exports$1","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","militargeographische_institut","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","r","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","datumDef","Datum","sphere_","Ellipsoid","dc_sphere","ecc","a2","b2","ep2","dc_eccentricity","getNadgrids","datumObj","datum_type","grids","geodeticToGeocentric","Rn","Sin_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","datum_transform","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","attemptedGrids","outer","subgrids","j","jj","subgrid","epsilon","del","ll","lim","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","array","m","checkCoord","num","TypeError","transform","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","transformer","from","to","coords","transformedArray","NaN","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","encode","eccPrimeSquared","N","T","C","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","round","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","result","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","arg","s","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","ml","acos","tan_phi","d","ds","f","g","h","asin","sinh","hypot","max","min","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens_cmplx","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","cosh","hr","hi1","hr1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","tmp","adjust_zone","dependsOn","srat","esinp","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","omerc","com","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","S","U","W","temp","u","Qp","Sp","Tp","Vp","Up","lcc","sin1","ts1","sin2","ms2","ts2","ts0","ns","f0","rh1","theta","krovak","s45","s90","fi0","alfa","uq","u0","k1","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","tl","asq","cl","dd","nl1","rl1","tl1","dl","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","asinz","aea","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","cea","iqsfnz","eqc","dlat","poly","el","bl","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu","C_y","C_x","moll","delta_theta","eqdc","ml1","ml2","vandg","sinth","costh","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","s2","s3","s4","cosAz","Ee","sinpsi","ortho","FACE_ENUM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","area","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","robin","f_df","max_err","iters","upd","newton_rapshon","poly3_der","geocent","azi","degrees","tilt","tpers","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","geos","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","defaultDatum","Proj","nadgrid","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","version","includedProjections","u8","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","_a","fl","revfl","fd","rev","hMap","cd","mb","l","co","le","rvb","sv","r_1","flt","fdt","flrm","fdrm","bits","o","bits16","slc","subarray","ec","err","ind","msg","nt","captureStackTrace","inflt","dat","st","buf","dict","sl","noBuf","resize","noSt","cbuf","nbuf","final","pos","bt","lm","dm","lbt","dbt","tbts","hLit","hcLen","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","sym","dsym","dend","et","b4","b8","inflateSync","opts","dictionary","te","TextEncoder","td","TextDecoder","stream","strToU8","str","latin1","ar_1","ar","ai","w","strFromU8","dutf8","slzh","zh","fnl","fn","bs","z64e","sc","su","off","unzip","encoding","zipBuffer","ArrayBuffer","decompressed","files","ze","fltr","c_2","no","size","originalSize","compression","fflate.unzipSync","fileName","fflate.strToU8","fflate.strFromU8","async","binaryAjax","_url","url","base","URL","location","href","pathname","combine","isOptionalTxt","resp","fetch","status","statusText","parsed","arrayBuffer","ParseShp","parseFunc","rows","constructor","trans","headers","parseHeader","byteLength","shpFuncs","getRows","parseCoord","shpFuncObj","isClockWise","sum","prev","cur","polyReduce","makeParseCoord","dataView","args","parsePoint","coordinates","tran","shpCode","parseZPoint","pointXY","parsePointArray","done","parseZPointArray","zOffset","parseArrayGroup","partOffset","tot","curNum","pointNumber","nextNum","parseZArrayGroup","parseMultiPoint","RangeError","mins","maxs","parseZMultiPoint","geoJson","parsePolyline","numParts","parseZPolyline","polyFuncs","parsePolygon","parseZPolygon","getShpCode","current","getRow","id","ParseShpFile","defaultDecoder","regex","createDecoder","second","exec","decoder","rowFuncs","textData","Date","parseRow","rowHeaders","field","dataType","parseDbf","lastUpdated","getInt8","records","headerLen","getInt16","recLen","dbfHeader","decimal","dbfRowHeader","ShpObject","shp","dbf","features","geometry","properties","parseZip","whiteList","zip","geojson","lastDotIdx","lastIndexOf","JSON","getZip","handleShp","Promise","all","prj","handleDbf","cpg","checkSuffix","suffix","getShapefile","results","parseShp","sp"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91]}